# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
  - template: templates/stages.yml
    parameters:
      library-name: my-library
  - stage: init
    displayName: Init
    jobs:
      - job: prepare
        steps:
        - script: echo Hello, world!
          displayName: 'Run a one-line script'

        - script: sudo apt-get install squid
          displayName: 'Squid installation'

        - script: |
            squid -v
            docker network ls --format="{{json .Name}}"
            # docker network inspect --format {{json .}}
            echo Add other tasks to build, test, and deploy your project.
            echo See https://aka.ms/yaml
          displayName: 'Run a multi-line script'
        - task: Bash@3
          name: mystep
          inputs:
            targetType: 'inline'
            script: |
              # Write your commands here
              export samplevar=myvalue
              echo "##vso[task.setvariable variable=vsoVar;isOutput=true]$samplevar"
              echo 'Hello world'
      - job: use
        dependsOn: prepare
        variables:
          the_previous_variable:  $[ dependencies.prepare.outputs['mystep.vsoVar'] ]
        steps:
        - script: echo Hello, world!
          displayName: 'Run a one-line script'
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              # Write your commands here
              
              echo "Hello world in second bash: $(the_previous_variable)"
      - job: docker_container
        container: ubuntu:18.04
        steps:
        - script: printenv
